/*
 * This code is generated by "Groovy - EasyB - Selenium RC" format.
 * Please refer to following URLs for:
 * 1) More Information:
 * http://limcheekin.blogspot.com/2009/07/behavior-driven-development-generating.html
 * 2) Latest Source Code:
 * https://vobject.svn.sourceforge.net/svnroot/vobject/grails/misc/trunk/groovy-easyb-rc.txt
 */

import com.thoughtworks.selenium.*
import java.util.regex.Pattern

before "start selenium", {
  given "selenium is up and running", {
	println "\nSYSTEM PROPERTIES:-"
	println "host: '${System.properties["host"]}'"
	println "port: '${System.properties["port"]}'"
	println "browser: '${System.properties["browser"]}'"
	println "url: '${System.properties["url"]}'"
    selenium = new DefaultSelenium(System.properties["host"],
               Integer.parseInt(System.properties["port"]), 
			   System.properties["browser"], 
			   System.properties["url"])
    selenium.start()
  }
}

scenario "Execute GAE's JUnit test cases with Web Runner", {
	when "open Web Runner", {
		selenium.open("/ktrwjr/")
		sleep(5000) // wait for page load
	}
	and "checked all test cases", {
		selenium.click("//td[3]/div/div")
	}	
	and "the 'Run' button has been clicked", {
		selenium.click("//td[3]/div")
	}
	and "wait for test cases finished execution", {
		sleep(10000) // not working! selenium.waitForPageToLoad("10000")
	}	
    then "verify number of errors and failures, which should be zero", {
		selenium.isTextPresent("Errors: 0").shouldBe true
		selenium.isTextPresent("Failures: 0").shouldBe true
	}
}

after "stop selenium", {
  then "selenium should be shutdown", {
    selenium.stop()
  }
}
